import Head from "next/head";
import React from "react";

import {
  Drawer,
  Toolbar,
  makeStyles,
  Typography,
  IconButton,
  CssBaseline,
  Grid,
  Button,
  Paper
} from "@material-ui/core";
import {
  Settings,
  ArrowForwardIos,
  People,
  PersonAdd,
  GroupAdd,
  CardGiftcard,
  Group,
  Person,
} from "@material-ui/icons";

import axios from "axios";

const drawerWidth = 320;

const useStyles = makeStyles((theme) => ({
  root: {},
  drawer: {
    width: drawerWidth,
    flexShrink: 0,
    "@media (max-width: 990px)": {
      display: "none",
    },
  },
  drawerPaper: {
    width: drawerWidth,
    backgroundColor: "#fff",
    border: "none",
    padding: "10px",
  },
  drawerContainer: {
    overflow: "auto",
  },
  friendsBox: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
  },
  friendsBoxTitle: {
    fontSize: "24px",
    fontWeight: "700",
  },
  friendsBoxItem: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    marginTop: "5px",
    padding: "10px 7.5px",
    cursor: "pointer",

    "&:hover": {
      background: "#e9ebee",
      borderRadius: "7.5px",
    },
  },
  friendsBoxItemActive: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    marginTop: "5px",
    padding: "12.5px 7.5px",
    cursor: "pointer",
    background: "#cbe6f7",
    borderRadius: "7.5px",
  },
  paper: {
    color: theme.palette.text.secondary,
    // whiteSpace: 'nowrap',
    // marginBottom: theme.spacing(1),
  },
  friendsTitleBox: {
    display: "flex",
    alignItems: "center",
  },
  friendsBoxItemIcon: {
    backgroundColor: "#ccc",
    color: "#000",
  },
  friendsBoxItemIconActive: {
    backgroundColor: "#0068c8",
    color: "#fff",
  },
  friendsBoxItemTitle: {
    marginLeft: "10px",
    fontSize: "16px",
    fontWeight: "500",
  },
  friendsWrapper: {
    flexGrow: 1,
    backgroundColor:"#f7f7f7",
    padding: "0px 30px",
    marginLeft: "320px",
    marginTop: "-48px",
  },
  friendsHeaderLink: {
    color: "#0068c8",
    fontWeight: "400",
    cursor: "pointer",
  },
  friendsImage: {
    width: "100%",
    height: "240px",
    borderTopLeftRadius: "7.5px",
    borderTopRightRadius: "7.5px",
  },
  friendsInfo: {
    padding: "10px 15px 0px 15px",
    display: "flex",
    flexDirection: "column",
    backgroundColor: "#fff",
    borderBottomLeftRadius: "7.5px",
    borderBottomRightRadius: "7.5px",
  },
  friendsInfoTitle: {
    fontSize: "18px",
    fontWeight: "500",
    color: "#000",
  },
  friendsInfoButton1: {
    margin: "20px 0 10px 0",
    backgroundColor: "#cbe6f7",
    "&:hover":{
      backgroundColor:"#d0e0ea",
    },
    textTransform: "capitalize",
  },
  friendsInfoButton2: {
    marginBottom: "15px",
    textTransform: "capitalize",
  },
}));

const friendsLink = [
  { icon: <People size="small" />, title: "Home", more: "" },
  {
    icon: <Person size="small" />,
    title: "Friend Requests",
    more: <ArrowForwardIos size="small" />,
  },
  {
    icon: <GroupAdd size="small" />,
    title: "Suggestions",
    more: <ArrowForwardIos size="small" />,
  },
  {
    icon: <Group size="small" />,
    title: "All Friends",
    more: <ArrowForwardIos size="small" />,
  },
  { icon: <CardGiftcard size="small" />, title: "Birthdays", more: "" },
];

const index = ({users}) => {
  const classes = useStyles();

  const [active, setActive] = React.useState("Home");

  return (
    <div>
      <Head>
        <title>Friends</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fa.ico" />
      </Head>

      <div className={classes.root}>
        <CssBaseline />
        <Toolbar variant="dense" />
        <Drawer
          className={classes.drawer}
          variant="permanent"
          classes={{ paper: classes.drawerPaper }}
        >
          <Toolbar variant="dense" />
          <div className={classes.drawerContainer}>
            <div className={classes.friendsBox}>
              <Typography className={classes.friendsBoxTitle}>
                Friends
              </Typography>
              <IconButton size="small">
                <Settings size="small" />
              </IconButton>
            </div>

            {friendsLink.map((item) => (
              <div
                key={item.title}
                onClick={() => setActive(item.title)}
                className={
                  item.title == active
                    ? classes.friendsBoxItemActive
                    : classes.friendsBoxItem
                }
              >
                <div className={classes.friendsTitleBox}>
                  <IconButton
                    size="small"
                    className={
                      item.title == active
                        ? classes.friendsBoxItemIconActive
                        : classes.friendsBoxItemIcon
                    }
                  >
                    {item.icon}
                  </IconButton>
                  <Typography className={classes.friendsBoxItemTitle}>
                    {item.title}
                  </Typography>
                </div>
                {item.more != "" ? (
                  <IconButton size="small">{item.more}</IconButton>
                ) : (
                  ""
                )}
              </div>
            ))}
          </div>
        </Drawer>
        <main className={classes.friendsWrapper}>
          <div className={classes.friendsBox} style={{ paddingTop: "20px" }}>
            <Typography className={classes.friendsBoxTitle}>
              People you may know
            </Typography>
            <Typography className={classes.friendsHeaderLink}>
              See All
            </Typography>
          </div>
          <Grid container style={{ marginTop: "10px" }} spacing={2}>
            {users.map((item) => (
              <Grid
                key={item.id}
                item
                md={3}
                
                direction="column"
                style={{
                  borderRadius: "7.5px",
                }}
              >
          <Paper className={classes.paper}>
                <img src={item.picture} className={classes.friendsImage} />
                <div className={classes.friendsInfo}>
                  <Typography className={classes.friendsInfoTitle}>
                    {item.firstName} {item.lastName}
                  </Typography>
                  <Button
                    className={classes.friendsInfoButton1}
                    variant="contained"
                  >
                    Add Friend
                  </Button>
                  <Button
                    className={classes.friendsInfoButton2}
                    variant="contained"
                  >
                    Remove
                  </Button>
                  </div>
                </Paper>
              </Grid>
            ))}
          </Grid>
        </main>
      </div>
    </div>
  );
};

index.layout = "L1";


export const getServerSideProps = async () => {

const BASE_URL = "https://dummyapi.io/data/api";
const APP_ID = "60cfe9b13605e4b79763dfc0";

  const users = await axios
    .get(`${BASE_URL}/user`, { headers: { "app-id": APP_ID } })
    .then(({ data }) => data.data)
    .catch((e) => ({}));

  return {
    props: {
      users:users,
    },
  };

};

export default index;
